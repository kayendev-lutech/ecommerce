{
  "name": "express-typescript-template",
  "version": "1.0.0",
  "main": "index.js",
  "type": "commonjs",
  "jest": {
    "extensionsToTreatAsEsm": [
      ".ts"
    ]
  },
  "scripts": {
    "dev": "nodemon --exec tsx -r tsconfig-paths/register src/server.ts",
    "build": "tsc --project tsconfig.json && tsc-alias --project tsconfig.json",
    "start": "node dist/server.js",
    "test": "jest --config jest.config.cjs",
    "lint": "eslint src",
    "format": "prettier --write src/**/*.{ts}",
    "lint:fix": "eslint src --fix",
    "worker": "tsx src/queue/worker.ts",
    "worker:dev": "nodemon --exec tsx src/queue/worker.ts",
    "migration:generate": "npx tsx node_modules/typeorm/cli.js migration:generate ./src/database/migrations/CreateVariantAttributeValues -d ./src/config/typeorm.config.ts",
    "migration:run": "npx tsx node_modules/typeorm/cli.js migration:run -d ./src/config/typeorm.config.ts",
    "seed:all": "npx tsx src/database/seeder.ts",
    "docker:seed": "node dist/database/seeder.js"
  },
  "keywords": [
    "express",
    "typescript",
    "boilerplate",
    "nodejs",
    "javascript",
    "backend",
    "modular architecture",
    "software development",
    "RESTful API",
    "typescript project",
    "ts-node",
    "typescript server",
    "web development",
    "web APIs",
    "typescript examples",
    "enterprise applications",
    "software engineering",
    "continuous integration",
    "development tools",
    "postman collection",
    "best practices",
    "clean code"
  ],
  "author": "DTK",
  "license": "MIT",
  "description": "This Express TypeScript Boilerplate provides a robust foundation for building scalable and maintainable web applications. It incorporates best practices and a modular architecture inspired by Nest.js, making it easy to expand and manage your projects. With TypeScript support, built-in error handling, and customizable middleware, this boilerplate is perfect for developers looking to streamline their API development process. Whether you're creating RESTful services or full-fledged applications, this boilerplate offers the flexibility and structure you need to succeed.",
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.19",
    "@types/dotenv": "^6.1.1",
    "@types/express": "^4.17.21",
    "@types/express-rate-limit": "^5.1.3",
    "@types/helmet": "^0.0.48",
    "@types/jest": "^30.0.0",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/lodash": "^4.17.20",
    "@types/multer": "^2.0.0",
    "@types/node": "^22.5.5",
    "@types/pg": "^8.15.4",
    "@types/redis": "^4.0.10",
    "@types/supertest": "^6.0.3",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.7.0",
    "@typescript-eslint/parser": "^8.7.0",
    "chalk": "^5.3.0",
    "cross-env": "^7.0.3",
    "dotenv": "^16.4.5",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-define-config": "^2.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "express": "^4.21.0",
    "husky": "^9.1.6",
    "jest": "^30.0.5",
    "nodemon": "^3.1.7",
    "prettier": "^3.3.3",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "ts-transform-paths": "^3.0.0",
    "tsc-alias": "^1.8.16",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.20.3",
    "typeorm-ts-node-esm": "^0.3.20",
    "typescript": "^5.6.2"
  },
  "dependencies": {
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/swagger": "^11.2.0",
    "@types/amqplib": "^0.10.6",
    "amqplib": "^0.10.8",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cloudinary": "^1.41.3",
    "cors": "^2.8.5",
    "dayjs": "^1.11.13",
    "express-rate-limit": "^8.0.1",
    "helmet": "^8.1.0",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.6.3",
    "multer": "^2.0.2",
    "multer-storage-cloudinary": "^4.0.0",
    "pg": "^8.16.3",
    "redis": "^4.7.1",
    "reflect-metadata": "^0.2.2",
    "routing-controllers": "^0.10.3",
    "sharp": "^0.34.3",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "typedi": "^0.10.0",
    "typeorm": "^0.3.25",
    "uuid": "^10.0.0",
    "wait-port": "^1.1.0"
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
